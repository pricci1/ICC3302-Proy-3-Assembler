DATA:

inicio  0
n       10
count   0
end 
mask    00000001
swapped 0
val_A   0
val_B   0
bit     0



CODE:
premain:
    // initialize count, end
main:
    A <- (count)
    PUSH A
    A <- ((count))
    MOV (val_A), A
    AND A, (mask)
    INC (count)
    B <- ((count))
    PUSH B
    MOV (val_B), B
    AND B, (mask)
    CMP A, B
    JGT swap
back:    
    // if count < end: jump to main
    MOV A, (end)
    CMP (count), A
    JLT main
    // else if swapped == 0: jump next
    MOV A, (swapped)
    CMP A, 0
    JEQ next
    //      else (swapped > 0): reset swapped, jump to premain
    RST (swapped)
    JMP premain




swap:
    INC (swapped)
    POP B
    MOV A, (val_A)
    MOV (B), A
    POP B
    MOV A, (val_B)
    MOV (B), A
    JMP back

next:
    MOV A, (bit)
    CMP A, 7
    JEQ fin
    MOV A, (mask)
    SHR (mask), A
    INC (bit)
    RST swapped
    JMP premain

fin: